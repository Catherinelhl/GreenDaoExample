package cn.catherine.data;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import cn.catherine.data.Person;
import cn.catherine.data.Son;
import cn.catherine.data.Father;

import cn.catherine.data.PersonDao;
import cn.catherine.data.SonDao;
import cn.catherine.data.FatherDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig personDaoConfig;
    private final DaoConfig sonDaoConfig;
    private final DaoConfig fatherDaoConfig;

    private final PersonDao personDao;
    private final SonDao sonDao;
    private final FatherDao fatherDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        personDaoConfig = daoConfigMap.get(PersonDao.class).clone();
        personDaoConfig.initIdentityScope(type);

        sonDaoConfig = daoConfigMap.get(SonDao.class).clone();
        sonDaoConfig.initIdentityScope(type);

        fatherDaoConfig = daoConfigMap.get(FatherDao.class).clone();
        fatherDaoConfig.initIdentityScope(type);

        personDao = new PersonDao(personDaoConfig, this);
        sonDao = new SonDao(sonDaoConfig, this);
        fatherDao = new FatherDao(fatherDaoConfig, this);

        registerDao(Person.class, personDao);
        registerDao(Son.class, sonDao);
        registerDao(Father.class, fatherDao);
    }
    
    public void clear() {
        personDaoConfig.clearIdentityScope();
        sonDaoConfig.clearIdentityScope();
        fatherDaoConfig.clearIdentityScope();
    }

    public PersonDao getPersonDao() {
        return personDao;
    }

    public SonDao getSonDao() {
        return sonDao;
    }

    public FatherDao getFatherDao() {
        return fatherDao;
    }

}
